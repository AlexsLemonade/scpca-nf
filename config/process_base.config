// mem_max memory level (will be scaled down by resource limits)
params.max_memory = 512.GB

process {
  resourceLimits = [ cpus: 12, memory: 32.GB ]
  memory = {4.GB * task.attempt}

  errorStrategy = { task.attempt < 3 ? 'retry' : 'finish' }
  maxRetries = 2
  maxErrors = '-1'

  withLabel: mem_8 {
    memory = {8.GB * task.attempt}
  }
  withLabel: mem_16 {
    memory = {16.GB * task.attempt}
  }
  withLabel: mem_24 {
    memory = {24.GB * task.attempt}
  }
  withLabel: mem_32 {
    memory = {32.GB * task.attempt}
  }
  withLabel: mem_96 {
    memory = {48.GB  + 48.GB * task.attempt}
  }
  withLabel: mem_max {
    memory = {(task.attempt > 2  && task.exitStatus in 137..140) ? params.max_memory : 192.GB * task.attempt}
  }
  withLabel: cpus_2  {
    cpus = 2
  }
  withLabel: cpus_4  {
    cpus = 4
  }
  withLabel: cpus_8  {
    cpus = 8
  }
  withLabel: cpus_12 {
    cpus = 12
  }
  withLabel: cpus_24 {
    cpus = 24
  }
}
