// Resource maximum settings
params.max_cpus = 24
params.max_memory = 96.GB

process{
  memory = {check_memory(4.GB * task.attempt)}

  errorStrategy = { task.attempt < 3 ? 'retry' : 'finish' }
  maxRetries = 2
  maxErrors = '-1'

  withLabel: mem_8 {
    memory = {check_memory(8.GB * task.attempt)}
  }
  withLabel: mem_16 {
    memory = {check_memory(16.GB * task.attempt)}
  }
  withLabel: mem_24 {
    memory = {check_memory(24.GB * task.attempt)}
  }
  withLabel: mem_32 {
    memory = {check_memory(32.GB * task.attempt)}
  }
  withLabel: mem_128 {
    memory = {check_memory(128.GB * task.attempt)}
  }
  withLabel: cpus_2  {
    cpus = {check_cpus(2)}
  }
  withLabel: cpus_4  {
    cpus = {check_cpus(4)}
  }
  withLabel: cpus_8  {
    cpus = {check_cpus(8)}
  }
  withLabel: cpus_12 {
    cpus = {check_cpus(12)}
  }
}


// Resource check functions
def check_memory(memory){
  memory = memory as nextflow.util.MemoryUnit
  def max_memory = params.max_memory as nextflow.util.MemoryUnit
  memory < max_memory ? memory : max_memory
}

def check_cpus(cpus){
  cpus = cpus as int
  def max_cpus = params.max_cpus as int
  cpus < max_cpus ? cpus : max_cpus
}
